# Generated by Django 5.0.6 on 2024-10-08 19:23

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Letter',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('subject', models.CharField(blank=True, max_length=255, null=True)),
                ('body', models.TextField(blank=True, null=True)),
                ('reference_number', models.SlugField(unique=True)),
                ('reference_number_am', models.SlugField(unique=True)),
                ('current_state', models.IntegerField(choices=[(1, 'Draft'), (2, 'Submitted'), (3, 'Published'), (4, 'Rejected'), (5, 'Closed'), (6, 'Trashed')])),
                ('language', models.CharField(choices=[('EN', 'English'), ('AM', 'Amharic')], default='AM', max_length=2)),
                ('submitted_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('published_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('hidden', models.BooleanField(default=False)),
                ('pdf_version', models.URLField(blank=True, editable=False, null=True)),
            ],
            options={
                'verbose_name': 'Letter',
                'verbose_name_plural': 'Letters',
                'permissions': (('can_view_letter', 'Can view letter'), ('can_update_letter', 'Can update letter'), ('can_archive_letter', 'Can archive letter'), ('can_share_letter', 'Can share letter'), ('can_submit_letter', 'Can submit letter'), ('can_publish_letter', 'Can publish letter'), ('can_reject_letter', 'Can reopen letter'), ('can_retract_letter', 'Can retract letter'), ('can_close_letter', 'Can close letter'), ('can_reopen_letter', 'Can reopen letter'), ('can_comment_letter', 'Can comment letter'), ('can_trash_letter', 'Can trash letter'), ('can_restore_letter', 'Can restore letter'), ('can_permanently_delete_letter', 'Can permanently delete letter')),
            },
        ),
        migrations.CreateModel(
            name='Incoming',
            fields=[
                ('letter_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='letters.letter')),
            ],
            options={
                'verbose_name': 'Incoming Letter',
                'verbose_name_plural': 'Incoming Letters',
            },
            bases=('letters.letter',),
        ),
        migrations.CreateModel(
            name='Internal',
            fields=[
                ('letter_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='letters.letter')),
            ],
            options={
                'verbose_name': 'Internal Letter',
                'verbose_name_plural': 'Internal Letters',
            },
            bases=('letters.letter',),
        ),
        migrations.CreateModel(
            name='Outgoing',
            fields=[
                ('letter_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='letters.letter')),
                ('delivery_person_name', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery_person_phone', models.CharField(blank=True, max_length=255, null=True)),
                ('shipment_id', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Outgoing Letter',
                'verbose_name_plural': 'Outgoing Letters',
            },
            bases=('letters.letter',),
        ),
    ]
