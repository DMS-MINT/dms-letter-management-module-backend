# Generated by Django 5.0.6 on 2024-06-13 01:43

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseUser',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='Guest',
            fields=[
                ('baseuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='users.baseuser')),
                ('name', models.CharField(help_text='Enter the name of the guest.', max_length=255, unique=True, verbose_name='Name')),
                ('email', models.EmailField(blank=True, help_text='Enter the email address of the guest.', max_length=254, null=True, verbose_name='Email Address')),
                ('phone_number', models.CharField(blank=True, help_text='Enter the phone number of the guest.', max_length=20, null=True, verbose_name='Phone Number')),
                ('address', models.CharField(blank=True, default='Addis Ababa, Ethiopia', help_text='Enter the address of the guest.', max_length=255, verbose_name='Address')),
                ('postal_code', models.PositiveIntegerField(blank=True, help_text='Enter the postal code of the guest.', null=True, verbose_name='Postal Code')),
            ],
            options={
                'verbose_name': 'Guest',
                'verbose_name_plural': 'Guests',
            },
            bases=('users.baseuser',),
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('baseuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='users.baseuser')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('job_title', models.CharField(help_text='Enter the job title of the employee.', max_length=254, unique=True, verbose_name='job title')),
                ('department', models.CharField(help_text='Enter the department of the employee.', max_length=254, verbose_name='department')),
                ('phone_number', models.CharField(help_text='Enter the phone number of the employee.', max_length=20, unique=True, verbose_name='phone number')),
                ('email', models.EmailField(help_text='Enter the email address of the employee.', max_length=255, unique=True, verbose_name='email address')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Member',
                'verbose_name_plural': 'Members',
            },
            bases=('users.baseuser', models.Model),
        ),
    ]
