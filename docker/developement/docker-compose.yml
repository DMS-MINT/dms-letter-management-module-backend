name: dms_backend

services:
  postgres:
    image: postgres:14.0
    container_name: postgres
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 30s
      retries: 3

  rabbitmq:
    image: "rabbitmq:alpine" 
    container_name: rabbit
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    ports:
      - "5672:5672"    
      - "15672:15672"  

  django:
    build:
      context: ../../
      dockerfile: docker/developement/Dockerfile
    container_name: dms_django
    command: python manage.py runserver 0.0.0.0:8000
    env_file:
      - ../../.env
    volumes:
      - ../../:/usr/src/app
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - rabbitmq
    restart: on-failure

  celery:
    build:
      context: ../../
      dockerfile: docker/developement/Dockerfile
    command: celery -A config.settings.celery worker -l info --without-gossip --without-mingle --without-heartbeat
    env_file:
      - ../../.env
    volumes:
      - ../../:/usr/src/app
    depends_on:
      - postgres
      - rabbitmq
    restart: on-failure 

volumes:
  postgres_data: