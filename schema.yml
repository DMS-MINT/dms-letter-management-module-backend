openapi: 3.0.3
info:
  title: Letter Management Module API
  version: 1.0.0
  description: This API provides endpoints for managing letters within the system.
    It includes operations for creating, retrieving, updating, and deleting letters,
    as well as additional features such as search and categorization.
paths:
  /api/auth/login/:
    post:
      operationId: api_auth_login_create
      description: Following https://docs.djangoproject.com/en/5.0/topics/auth/default/#how-to-log-a-user-in
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Input'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Input'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Input'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Input'
          description: ''
  /api/auth/logout/:
    get:
      operationId: api_auth_logout_retrieve
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/auth/me/:
    get:
      operationId: api_auth_me_retrieve
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/auth/qr-code/:
    post:
      operationId: api_auth_qr_code_create
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/auth/validate-otp/:
    post:
      operationId: api_auth_validate_otp_create
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/comments/{comment_id}/delete/:
    delete:
      operationId: api_comments_delete_destroy
      parameters:
      - in: path
        name: comment_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      responses:
        '204':
          description: No response body
  /api/comments/{comment_id}/update/:
    put:
      operationId: api_comments_update_update
      parameters:
      - in: path
        name: comment_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Input'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Input'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Input'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Input'
          description: ''
  /api/comments/{reference_number}/create/:
    post:
      operationId: api_comments_create_create
      parameters:
      - in: path
        name: reference_number
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Input'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Input'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Input'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Input'
          description: ''
  /api/contacts/:
    get:
      operationId: api_contacts_retrieve
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/contacts/{contact_id}/:
    get:
      operationId: api_contacts_retrieve_2
      parameters:
      - in: path
        name: contact_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/contacts/{contact_id}/delete/:
    delete:
      operationId: api_contacts_delete_destroy
      parameters:
      - in: path
        name: contact_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      responses:
        '204':
          description: No response body
  /api/contacts/{contact_id}/update/:
    post:
      operationId: api_contacts_update_create
      parameters:
      - in: path
        name: contact_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/contacts/bulk/delete/:
    delete:
      operationId: api_contacts_bulk_delete_destroy
      tags:
      - api
      responses:
        '204':
          description: No response body
  /api/contacts/create/:
    post:
      operationId: api_contacts_create_create
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/enterprises/:
    get:
      operationId: api_enterprises_retrieve
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/letters/{reference_number}/close/:
    put:
      operationId: api_letters_close_update
      parameters:
      - in: path
        name: reference_number
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/letters/{reference_number}/publish/:
    put:
      operationId: api_letters_publish_update
      parameters:
      - in: path
        name: reference_number
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/letters/{reference_number}/reject/:
    put:
      operationId: api_letters_reject_update
      parameters:
      - in: path
        name: reference_number
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/letters/{reference_number}/reopen/:
    put:
      operationId: api_letters_reopen_update
      parameters:
      - in: path
        name: reference_number
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/letters/{reference_number}/retract/:
    put:
      operationId: api_letters_retract_update
      parameters:
      - in: path
        name: reference_number
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/letters/{reference_number}/share/:
    post:
      operationId: api_letters_share_create
      parameters:
      - in: path
        name: reference_number
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Input'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Input'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Input'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Input'
          description: ''
  /api/letters/{reference_number}/submit/:
    put:
      operationId: api_letters_submit_update
      parameters:
      - in: path
        name: reference_number
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/letters/create/:
    post:
      operationId: api_letters_create_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LetterCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LetterCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LetterCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LetterCreate'
          description: ''
  /api/letters/participants/:
    get:
      operationId: api_letters_participants_retrieve
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/signatures/retrieve-signature/:
    post:
      operationId: api_signatures_retrieve_signature_create
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/users/:
    get:
      operationId: api_users_retrieve
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Output'
          description: ''
  /api/users/{user_id}/:
    get:
      operationId: api_users_retrieve_2
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Output'
          description: ''
components:
  schemas:
    EnterpriseParticipantInput:
      type: object
      properties:
        id:
          type: string
          format: uuid
        role:
          $ref: '#/components/schemas/RoleEnum'
      required:
      - role
    EnterpriseParticipantInputTyped:
      allOf:
      - type: object
        properties:
          participant_type:
            type: string
        required:
        - participant_type
      - $ref: '#/components/schemas/EnterpriseParticipantInput'
    ExternalParticipantInput:
      type: object
      properties:
        id:
          type: string
          format: uuid
        role:
          $ref: '#/components/schemas/RoleEnum'
      required:
      - role
    ExternalParticipantInputTyped:
      allOf:
      - type: object
        properties:
          participant_type:
            type: string
        required:
        - participant_type
      - $ref: '#/components/schemas/ExternalParticipantInput'
    Input:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - email
      - password
    InternalParticipantInput:
      type: object
      properties:
        id:
          type: string
          format: uuid
        role:
          $ref: '#/components/schemas/RoleEnum'
      required:
      - role
    InternalParticipantInputTyped:
      allOf:
      - type: object
        properties:
          participant_type:
            type: string
        required:
        - participant_type
      - $ref: '#/components/schemas/InternalParticipantInput'
    LanguageEnum:
      enum:
      - EN
      - AM
      type: string
      description: |-
        * `EN` - EN
        * `AM` - AM
    LetterCategoryEnum:
      enum:
      - internal
      - incoming
      - outgoing
      type: string
      description: |-
        * `internal` - internal
        * `incoming` - incoming
        * `outgoing` - outgoing
    LetterCreate:
      type: object
      properties:
        subject:
          type: string
        body:
          type: string
        letter_category:
          $ref: '#/components/schemas/LetterCategoryEnum'
        language:
          $ref: '#/components/schemas/LanguageEnum'
        participants:
          type: array
          items:
            $ref: '#/components/schemas/ParticipantInput'
      required:
      - language
      - letter_category
      - participants
    Output:
      type: object
      properties:
        id:
          type: string
          format: uuid
        full_name:
          type: string
        job_title:
          type: string
      required:
      - full_name
      - id
      - job_title
    ParticipantInput:
      oneOf:
      - $ref: '#/components/schemas/InternalParticipantInputTyped'
      - $ref: '#/components/schemas/EnterpriseParticipantInputTyped'
      - $ref: '#/components/schemas/ExternalParticipantInputTyped'
      discriminator:
        propertyName: participant_type
        mapping:
          user: '#/components/schemas/InternalParticipantInputTyped'
          publicenterprise: '#/components/schemas/EnterpriseParticipantInputTyped'
          contact: '#/components/schemas/ExternalParticipantInputTyped'
    RoleEnum:
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      type: integer
      description: |-
        * `1` - Author
        * `2` - Primary Recipient
        * `3` - Carbon Copy Recipient
        * `4` - Blind Carbon Copy Recipient
        * `5` - Collaborator
        * `6` - Administrator
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
