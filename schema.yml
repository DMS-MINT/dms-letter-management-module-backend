openapi: 3.0.3
info:
  title: Document Management System API
  version: 2.0.0
  description: Documentation for the Document Management System APIs.
paths:
  /api/auth/forgot-password/:
    post:
      operationId: api_auth_forgot_password_create
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/auth/login/:
    post:
      operationId: api_auth_login_create
      description: Following https://docs.djangoproject.com/en/5.0/topics/auth/default/#how-to-log-a-user-in
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Input'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Input'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Input'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Input'
          description: ''
  /api/auth/logout/:
    get:
      operationId: api_auth_logout_retrieve
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/auth/me/:
    get:
      operationId: api_auth_me_retrieve
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Output'
          description: ''
  /api/auth/qr-code/:
    post:
      operationId: api_auth_qr_code_create
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/auth/reset-password/:
    post:
      operationId: api_auth_reset_password_create
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/auth/signup/:
    post:
      operationId: api_auth_signup_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Input'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Input'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Input'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Input'
          description: ''
  /api/auth/validate-otp/:
    post:
      operationId: api_auth_validate_otp_create
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/auth/verify-otp/:
    post:
      operationId: api_auth_verify_otp_create
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/comments/{comment_id}/delete/:
    delete:
      operationId: api_comments_delete_destroy
      parameters:
      - in: path
        name: comment_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      responses:
        '204':
          description: No response body
  /api/comments/{comment_id}/update/:
    put:
      operationId: api_comments_update_update
      parameters:
      - in: path
        name: comment_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Input'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Input'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Input'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Input'
          description: ''
  /api/comments/{reference_number}/create/:
    post:
      operationId: api_comments_create_create
      parameters:
      - in: path
        name: reference_number
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Input'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Input'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Input'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Input'
          description: ''
  /api/contacts/:
    get:
      operationId: api_contacts_retrieve
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Output'
          description: ''
  /api/contacts/{contact_id}/:
    get:
      operationId: api_contacts_retrieve_2
      parameters:
      - in: path
        name: contact_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Output'
          description: ''
  /api/contacts/{contact_id}/delete/:
    delete:
      operationId: api_contacts_delete_destroy
      parameters:
      - in: path
        name: contact_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      responses:
        '204':
          description: No response body
  /api/contacts/{contact_id}/update/:
    post:
      operationId: api_contacts_update_create
      parameters:
      - in: path
        name: contact_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Input'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Input'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Input'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Input'
          description: ''
  /api/contacts/bulk/delete/:
    delete:
      operationId: api_contacts_bulk_delete_destroy
      tags:
      - api
      responses:
        '204':
          description: No response body
  /api/contacts/create/:
    post:
      operationId: api_contacts_create_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Input'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Input'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Input'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Input'
          description: ''
  /api/departments/:
    get:
      operationId: api_departments_retrieve
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Output'
          description: ''
  /api/departments/{department_id}/:
    get:
      operationId: api_departments_retrieve_2
      parameters:
      - in: path
        name: department_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Output'
          description: ''
  /api/departments/{department_id}/delete/:
    delete:
      operationId: api_departments_delete_destroy
      parameters:
      - in: path
        name: department_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      responses:
        '204':
          description: No response body
  /api/departments/{department_id}/update/:
    put:
      operationId: api_departments_update_update
      parameters:
      - in: path
        name: department_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Input'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Input'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Input'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Input'
          description: ''
  /api/departments/create/:
    post:
      operationId: api_departments_create_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Input'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Input'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Input'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Input'
          description: ''
  /api/enterprises/:
    get:
      operationId: api_enterprises_retrieve
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Output'
          description: ''
  /api/job_titles/:
    get:
      operationId: api_job_titles_retrieve
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Output'
          description: ''
  /api/job_titles/{job_title_id}/:
    get:
      operationId: api_job_titles_retrieve_2
      parameters:
      - in: path
        name: job_title_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Output'
          description: ''
  /api/job_titles/{job_title_id}/delete/:
    delete:
      operationId: api_job_titles_delete_destroy
      parameters:
      - in: path
        name: job_title_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      responses:
        '204':
          description: No response body
  /api/job_titles/{job_title_id}/update/:
    put:
      operationId: api_job_titles_update_update
      parameters:
      - in: path
        name: job_title_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Input'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Input'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Input'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Input'
          description: ''
  /api/job_titles/create/:
    post:
      operationId: api_job_titles_create_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Input'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Input'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Input'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Input'
          description: ''
  /api/letters/:
    get:
      operationId: api_letters_retrieve
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Filter'
          description: ''
  /api/letters/{reference_number}/:
    get:
      operationId: api_letters_retrieve_2
      parameters:
      - in: path
        name: reference_number
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LetterDetailPolymorphic'
          description: ''
  /api/letters/{reference_number}/close/:
    put:
      operationId: api_letters_close_update
      parameters:
      - in: path
        name: reference_number
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/letters/{reference_number}/delete/:
    put:
      operationId: api_letters_delete_update
      parameters:
      - in: path
        name: reference_number
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Input'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Input'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Input'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Input'
          description: ''
  /api/letters/{reference_number}/pdf/:
    get:
      operationId: api_letters_pdf_retrieve
      parameters:
      - in: path
        name: reference_number
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/letters/{reference_number}/publish/:
    put:
      operationId: api_letters_publish_update
      parameters:
      - in: path
        name: reference_number
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/letters/{reference_number}/reject/:
    put:
      operationId: api_letters_reject_update
      parameters:
      - in: path
        name: reference_number
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/letters/{reference_number}/reopen/:
    put:
      operationId: api_letters_reopen_update
      parameters:
      - in: path
        name: reference_number
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/letters/{reference_number}/restore/:
    put:
      operationId: api_letters_restore_update
      parameters:
      - in: path
        name: reference_number
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LetterDetailPolymorphic'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LetterDetailPolymorphic'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LetterDetailPolymorphic'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LetterDetailPolymorphic'
          description: ''
  /api/letters/{reference_number}/retract/:
    put:
      operationId: api_letters_retract_update
      parameters:
      - in: path
        name: reference_number
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/letters/{reference_number}/share/:
    post:
      operationId: api_letters_share_create
      parameters:
      - in: path
        name: reference_number
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Input'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Input'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Input'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Input'
          description: ''
  /api/letters/{reference_number}/submit/:
    put:
      operationId: api_letters_submit_update
      parameters:
      - in: path
        name: reference_number
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/letters/{reference_number}/trash/:
    put:
      operationId: api_letters_trash_update
      parameters:
      - in: path
        name: reference_number
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LetterDetailPolymorphic'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LetterDetailPolymorphic'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LetterDetailPolymorphic'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LetterDetailPolymorphic'
          description: ''
  /api/letters/{reference_number}/update/:
    put:
      operationId: api_letters_update_update
      parameters:
      - in: path
        name: reference_number
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Input'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Input'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Input'
          description: ''
  /api/letters/bulk/delete/:
    put:
      operationId: api_letters_bulk_delete_update
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/letters/bulk/restore/:
    put:
      operationId: api_letters_bulk_restore_update
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/letters/bulk/trash/:
    put:
      operationId: api_letters_bulk_trash_update
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/letters/create/:
    post:
      operationId: api_letters_create_create
      tags:
      - api
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LetterCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LetterCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LetterCreate'
          description: ''
  /api/letters/create_and_publish/:
    post:
      operationId: api_letters_create_and_publish_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Input'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Input'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Input'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Input'
          description: ''
  /api/letters/create_and_submit/:
    post:
      operationId: api_letters_create_and_submit_create
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/members/:
    get:
      operationId: api_members_retrieve
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberList'
          description: ''
  /api/members/{member_id}/:
    get:
      operationId: api_members_retrieve_2
      parameters:
      - in: path
        name: member_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberDetail'
          description: ''
  /api/members/create/:
    post:
      operationId: api_members_create_create
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/notifications/:
    get:
      operationId: api_notifications_retrieve
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
  /api/notifications/{notification_id}/notified/:
    put:
      operationId: api_notifications_notified_update
      parameters:
      - in: path
        name: notification_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/notifications/{notification_id}/read/:
    put:
      operationId: api_notifications_read_update
      parameters:
      - in: path
        name: notification_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/notifications/bulk/read/:
    put:
      operationId: api_notifications_bulk_read_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Input'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Input'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Input'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Input'
          description: ''
  /api/notifications/reminder/:
    post:
      operationId: api_notifications_reminder_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Input'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Input'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Input'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Input'
          description: ''
  /api/participants/{participant_id}/delete/:
    delete:
      operationId: api_participants_delete_destroy
      parameters:
      - in: path
        name: participant_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/signatures/retrieve-signature/:
    post:
      operationId: api_signatures_retrieve_signature_create
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/tenants/{tenant_id}/:
    get:
      operationId: api_tenants_retrieve
      parameters:
      - in: path
        name: tenant_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Output'
          description: ''
  /api/tenants/create/:
    post:
      operationId: api_tenants_create_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Input'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Input'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Input'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Input'
          description: ''
  /api/tenants/update/{tenant_id}/:
    put:
      operationId: api_tenants_update_update
      parameters:
      - in: path
        name: tenant_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Input'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Input'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Input'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Input'
          description: ''
  /api/tenants/update/settings/{tenant_id}/:
    put:
      operationId: api_tenants_update_settings_update
      parameters:
      - in: path
        name: tenant_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Input'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Input'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Input'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Input'
          description: ''
components:
  schemas:
    CategoryEnum:
      enum:
      - inbox
      - outbox
      - draft
      - trash
      - pending
      - published
      type: string
      description: |-
        * `inbox` - inbox
        * `outbox` - outbox
        * `draft` - draft
        * `trash` - trash
        * `pending` - pending
        * `published` - published
    EnterpriseParticipantInput:
      type: object
      properties:
        id:
          type: string
          format: uuid
        role:
          type: string
        enterprise_id:
          type: string
          format: uuid
      required:
      - enterprise_id
      - role
    EnterpriseParticipantInputTyped:
      allOf:
      - type: object
        properties:
          participant_type:
            type: string
        required:
        - participant_type
      - $ref: '#/components/schemas/EnterpriseParticipantInput'
    EnterpriseParticipantOutput:
      type: object
      properties:
        id:
          type: string
          format: uuid
        role:
          $ref: '#/components/schemas/RoleEnum'
        enterprise:
          $ref: '#/components/schemas/inline_serializer'
      required:
      - enterprise
      - role
    EnterpriseParticipantOutputTyped:
      allOf:
      - type: object
        properties:
          participant_type:
            type: string
        required:
        - participant_type
      - $ref: '#/components/schemas/EnterpriseParticipantOutput'
    ExternalParticipantInput:
      type: object
      properties:
        id:
          type: string
          format: uuid
        role:
          type: string
        contact:
          $ref: '#/components/schemas/inline_serializer'
      required:
      - contact
      - role
    ExternalParticipantInputTyped:
      allOf:
      - type: object
        properties:
          participant_type:
            type: string
        required:
        - participant_type
      - $ref: '#/components/schemas/ExternalParticipantInput'
    ExternalParticipantOutput:
      type: object
      properties:
        id:
          type: string
          format: uuid
        role:
          $ref: '#/components/schemas/RoleEnum'
        contact:
          $ref: '#/components/schemas/inline_serializer'
      required:
      - contact
      - role
    ExternalParticipantOutputTyped:
      allOf:
      - type: object
        properties:
          participant_type:
            type: string
        required:
        - participant_type
      - $ref: '#/components/schemas/ExternalParticipantOutput'
    Filter:
      type: object
      properties:
        category:
          $ref: '#/components/schemas/CategoryEnum'
      required:
      - category
    Input:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - email
      - password
    InternalParticipantInput:
      type: object
      properties:
        id:
          type: string
          format: uuid
        role:
          type: string
        user_id:
          type: string
          format: uuid
      required:
      - role
      - user_id
    InternalParticipantInputTyped:
      allOf:
      - type: object
        properties:
          participant_type:
            type: string
        required:
        - participant_type
      - $ref: '#/components/schemas/InternalParticipantInput'
    InternalParticipantOutput:
      type: object
      properties:
        id:
          type: string
          format: uuid
        role:
          $ref: '#/components/schemas/RoleEnum'
        user:
          $ref: '#/components/schemas/MemberList'
      required:
      - role
      - user
    InternalParticipantOutputTyped:
      allOf:
      - type: object
        properties:
          participant_type:
            type: string
        required:
        - participant_type
      - $ref: '#/components/schemas/InternalParticipantOutput'
    LanguageEnum:
      enum:
      - EN
      - AM
      type: string
      description: |-
        * `EN` - EN
        * `AM` - AM
    LetterCreate:
      type: object
      properties:
        subject:
          type: string
        body:
          type: string
        letter_type:
          $ref: '#/components/schemas/LetterTypeEnum'
        language:
          $ref: '#/components/schemas/LanguageEnum'
        participants:
          type: array
          items:
            $ref: '#/components/schemas/ParticipantInput'
      required:
      - language
      - letter_type
      - participants
    LetterDetail:
      type: object
      properties:
        id:
          type: string
          format: uuid
        reference_number:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        reference_number_am:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        current_state:
          type: string
        subject:
          type: string
        body:
          type: string
        owner:
          $ref: '#/components/schemas/MemberList'
        language:
          type: string
        pdf_version:
          type: string
          format: uri
        participants:
          type: array
          items:
            $ref: '#/components/schemas/ParticipantOutput'
        comments:
          type: array
          items:
            $ref: '#/components/schemas/inline_serializer'
        letter_attachments:
          type: array
          items:
            $ref: '#/components/schemas/inline_serializer'
        submitted_at:
          type: string
          format: date-time
        published_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
      - body
      - comments
      - created_at
      - current_state
      - id
      - language
      - letter_attachments
      - owner
      - participants
      - pdf_version
      - published_at
      - reference_number
      - reference_number_am
      - subject
      - submitted_at
      - updated_at
    LetterDetailPolymorphic:
      oneOf:
      - $ref: '#/components/schemas/LetterDetailTyped'
      - $ref: '#/components/schemas/LetterDetailTyped'
      - $ref: '#/components/schemas/OutgoingLetterDetailTyped'
      discriminator:
        propertyName: letter_type
        mapping:
          internal: '#/components/schemas/LetterDetailTyped'
          incoming: '#/components/schemas/LetterDetailTyped'
          outgoing: '#/components/schemas/OutgoingLetterDetailTyped'
    LetterDetailTyped:
      allOf:
      - type: object
        properties:
          letter_type:
            type: string
        required:
        - letter_type
      - $ref: '#/components/schemas/LetterDetail'
    LetterTypeEnum:
      enum:
      - internal
      - incoming
      - outgoing
      type: string
      description: |-
        * `internal` - internal
        * `incoming` - incoming
        * `outgoing` - outgoing
    MemberDetail:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          readOnly: true
        member_profile:
          $ref: '#/components/schemas/MemberProfileDetail'
        member_permissions:
          $ref: '#/components/schemas/MemberPermissions'
        member_settings:
          $ref: '#/components/schemas/MemberSettings'
      required:
      - email
      - id
      - member_permissions
      - member_profile
      - member_settings
    MemberList:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          readOnly: true
        member_profile:
          $ref: '#/components/schemas/MemberProfile'
        member_permissions:
          $ref: '#/components/schemas/MemberPermissions'
      required:
      - email
      - id
      - member_permissions
      - member_profile
    MemberPermissions:
      type: object
      properties:
        is_admin:
          type: boolean
        is_staff:
          type: boolean
      required:
      - is_admin
      - is_staff
    MemberProfile:
      type: object
      properties:
        full_name_en:
          type: string
        full_name_am:
          type: string
        job_title:
          $ref: '#/components/schemas/inline_serializer'
        department:
          $ref: '#/components/schemas/inline_serializer'
      required:
      - department
      - full_name_am
      - full_name_en
      - job_title
    MemberProfileDetail:
      type: object
      properties:
        first_name_en:
          type: string
        middle_name_en:
          type: string
        last_name_en:
          type: string
        first_name_am:
          type: string
        middle_name_am:
          type: string
        last_name_am:
          type: string
        full_name_en:
          type: string
        full_name_am:
          type: string
        job_title:
          $ref: '#/components/schemas/inline_serializer'
        department:
          $ref: '#/components/schemas/inline_serializer'
        phone_number:
          type: integer
      required:
      - department
      - first_name_am
      - first_name_en
      - full_name_am
      - full_name_en
      - job_title
      - last_name_am
      - last_name_en
      - middle_name_am
      - middle_name_en
      - phone_number
    MemberSettings:
      type: object
      properties:
        is_2fa_enabled:
          type: boolean
        is_verified:
          type: boolean
      required:
      - is_2fa_enabled
      - is_verified
    Notification:
      type: object
      properties:
        id:
          type: string
          format: uuid
        subject:
          type: string
        message:
          type: string
        details: {}
        sent_at:
          type: string
          format: date-time
        tags:
          type: array
          items:
            type: string
          readOnly: true
        has_read:
          type: boolean
          readOnly: true
        has_notified:
          type: boolean
          readOnly: true
      required:
      - has_notified
      - has_read
      - id
      - message
      - sent_at
      - subject
      - tags
    OutgoingLetterDetail:
      type: object
      properties:
        id:
          type: string
          format: uuid
        reference_number:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        reference_number_am:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        current_state:
          type: string
        subject:
          type: string
        body:
          type: string
        owner:
          $ref: '#/components/schemas/MemberList'
        language:
          type: string
        pdf_version:
          type: string
          format: uri
        participants:
          type: array
          items:
            $ref: '#/components/schemas/ParticipantOutput'
        comments:
          type: array
          items:
            $ref: '#/components/schemas/inline_serializer'
        letter_attachments:
          type: array
          items:
            $ref: '#/components/schemas/inline_serializer'
        submitted_at:
          type: string
          format: date-time
        published_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        delivery_person_name:
          type: string
        delivery_person_phone:
          type: string
          format: date-time
        shipment_id:
          type: string
          format: date-time
      required:
      - body
      - comments
      - created_at
      - current_state
      - delivery_person_name
      - delivery_person_phone
      - id
      - language
      - letter_attachments
      - owner
      - participants
      - pdf_version
      - published_at
      - reference_number
      - reference_number_am
      - shipment_id
      - subject
      - submitted_at
      - updated_at
    OutgoingLetterDetailTyped:
      allOf:
      - type: object
        properties:
          letter_type:
            type: string
        required:
        - letter_type
      - $ref: '#/components/schemas/OutgoingLetterDetail'
    Output:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          readOnly: true
        member_profile:
          $ref: '#/components/schemas/MemberProfileDetail'
        member_permissions:
          $ref: '#/components/schemas/MemberPermissions'
        member_settings:
          $ref: '#/components/schemas/MemberSettings'
      required:
      - email
      - id
      - member_permissions
      - member_profile
      - member_settings
    ParticipantInput:
      oneOf:
      - $ref: '#/components/schemas/InternalParticipantInputTyped'
      - $ref: '#/components/schemas/EnterpriseParticipantInputTyped'
      - $ref: '#/components/schemas/ExternalParticipantInputTyped'
      discriminator:
        propertyName: participant_type
        mapping:
          user: '#/components/schemas/InternalParticipantInputTyped'
          enterprise: '#/components/schemas/EnterpriseParticipantInputTyped'
          contact: '#/components/schemas/ExternalParticipantInputTyped'
    ParticipantOutput:
      oneOf:
      - $ref: '#/components/schemas/InternalParticipantOutputTyped'
      - $ref: '#/components/schemas/EnterpriseParticipantOutputTyped'
      - $ref: '#/components/schemas/ExternalParticipantOutputTyped'
      discriminator:
        propertyName: participant_type
        mapping:
          user: '#/components/schemas/InternalParticipantOutputTyped'
          enterprise: '#/components/schemas/EnterpriseParticipantOutputTyped'
          contact: '#/components/schemas/ExternalParticipantOutputTyped'
    RoleEnum:
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      type: integer
      description: |-
        * `1` - Author
        * `2` - Primary Recipient
        * `3` - Carbon Copy Recipient
        * `4` - Blind Carbon Copy Recipient
        * `5` - Collaborator
        * `6` - Administrator
    inline_serializer:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title_en:
          type: string
        title_am:
          type: string
      required:
      - id
      - title_am
      - title_en
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
